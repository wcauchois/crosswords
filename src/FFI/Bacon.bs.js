// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var Baconjs = require("baconjs");
var Dom$Crosswords = require("./Dom.bs.js");

function repeat(callback) {
  return Baconjs.repeat((function (i) {
                var match = Curry._1(callback, i);
                if (match) {
                  return match[0];
                } else {
                  return ( undefined );
                }
              }));
}

function flatMapOption(obs, fn) {
  return obs.flatMap((function (item) {
                var match = Curry._1(fn, item);
                if (match) {
                  return Baconjs.once(match[0]);
                } else {
                  return Baconjs.never();
                }
              }));
}

var Observable = /* module */[/* flatMapOption */flatMapOption];

function capturingKeyboardObservable(transformer) {
  var currentCallback = [/* None */0];
  Dom$Crosswords.Window[/* addEventListener */0]("keydown", (function ($$event) {
          var match = Curry._1(transformer, $$event);
          var match$1 = currentCallback[0];
          if (match && match$1) {
            $$event.preventDefault();
            return Curry._1(match$1[0], match[0]);
          } else {
            return /* () */0;
          }
        }));
  return repeat((function () {
                return /* Some */[Baconjs.fromCallback((function (callback) {
                                currentCallback[0] = /* Some */[callback];
                                return /* () */0;
                              }))];
              }));
}

exports.repeat = repeat;
exports.Observable = Observable;
exports.capturingKeyboardObservable = capturingKeyboardObservable;
/* baconjs Not a pure module */
